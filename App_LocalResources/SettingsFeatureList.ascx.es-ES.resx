<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="ControlTitle_settings.Text" xml:space="preserve">
    <value>Configuración de la característica-lista de BBStore</value>
  </data>
	<data name="DeleteFeatureListTemplate.Text" xml:space="preserve">
    <value>¿Está seguro de eliminar esta plantilla de lista de característica? Los productos que va a utilizar esta plantilla volverá a la pantalla predeterminada!</value>
  </data>
	<data name="lblFeaturesInRow.Help" xml:space="preserve">
    <value>Introduzca el número de características que se muestra en una fila</value>
  </data>
	<data name="lblFeaturesInRow.Text" xml:space="preserve">
    <value>En la fila de características</value>
  </data>
	<data name="lnkReset.Text" xml:space="preserve">
    <value>Restablecer a predeterminado</value>
  </data>
	<data name="SelectOption.Text" xml:space="preserve">
    <value>(Seleccione opcional)</value>
  </data>
	<data name="lblHeaderText.Text" xml:space="preserve">
    <value>Texto de encabezado</value>
  </data>
	<data name="lblHeaderText.Help" xml:space="preserve">
    <value>Escriba encima para mostrar la lista de características de un texto (HTML permitido)</value>
  </data>
	<data name="lblFooterText.Text" xml:space="preserve">
    <value>Texto de pie de página</value>
  </data>
	<data name="lblFooterText.Help" xml:space="preserve">
    <value>Escriba para mostrar debajo de la lista de características de un texto (HTML permitido)</value>
  </data>
	<data name="lblProductListModulePage.Text" xml:space="preserve">
    <value>Página de producto lista de módulos</value>
  </data>
	<data name="lblProductListModulePage.Help" xml:space="preserve">
    <value>Por favor, seleccione una página que contiene un módulo Productoy con opción de selección de datos dinámicos</value>
  </data>
	<data name="lblFeatureList.Text" xml:space="preserve">
		<value>Lista de funciones</value>
	</data>
	<data name="lblFeatureList.Help" xml:space="preserve">
		<value>Seleccione la lista de funciones que debe mostrarse para filtrar</value>
	</data>
	<data name="Edit.Text" xml:space="preserve">
		<value>(Editar)</value>
	</data>
	<data name="lblViewMode.Text" xml:space="preserve">
		<value>Mostrar como</value>
	</data>
	<data name="lblViewMode.Help" xml:space="preserve">
		<value>Seleccione el tipo de pantalla: en formato de tabla o como una caminadora</value>
	</data>
	<data name="rblViewModeScroller.Text" xml:space="preserve">
		<value>Rotador</value>
	</data>
	<data name="rblViewModeTable.Text" xml:space="preserve">
		<value>Tabla</value>
	</data>
	<data name="lblOnlyWithImage.Text" xml:space="preserve">
		<value>Sólo las entradas con foto</value>
	</data>
	<data name="lblOnlyWithImage.Help" xml:space="preserve">
		<value>Cuando se muestran características sólo marcadas con imagen</value>
	</data>
	<data name="lblRotatorHeight.Text" xml:space="preserve">
		<value>Altura de la caminadora</value>
	</data>
	<data name="lblRotatorHeight.Help" xml:space="preserve">
		<value>Especificar la altura de la caminadora (en píxeles)</value>
	</data>
</root>