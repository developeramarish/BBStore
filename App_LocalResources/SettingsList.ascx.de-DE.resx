<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="ControlTitle_settings.Text" xml:space="preserve">
    <value>BBStore Product List Einstellungen</value>
  </data>
	<data name="lblProductsInRow.Help" xml:space="preserve">
    <value>Geben Sie an, wie viele Artikel in einer Zeile dargestellt werden sollen</value>
  </data>
	<data name="lblProductsInRow.Text" xml:space="preserve">
    <value>Anzahl Artikel / Zeile</value>
  </data>
	<data name="lblRowsPerPage.Help" xml:space="preserve">
    <value>Geben Sie die gewünschte Anzahl der Zeilen pro Seite an</value>
  </data>
	<data name="lblRowsPerPage.Text" xml:space="preserve">
    <value>Anzahl Zeilen / Seite</value>
  </data>
	<data name="lnkReset.Text" xml:space="preserve">
    <value>auf Standard setzen</value>
  </data>
	<data name="DeleteProductTemplate.Text" xml:space="preserve">
    <value>Wollen Sie diese Produktvorlage wirklich löschen ?Produkte, die diese Vorlage verwenden, werden anschließend mit dem Standard-Design angezeigt werden!</value>
  </data>
	<data name="lblProductModulePage.Help" xml:space="preserve">
    <value>Bitte wählen Sie eine Seite die ein Product Modul enthält, das als 'dynamisch' eingestellt ist</value>
  </data>
	<data name="lblProductModulePage.Text" xml:space="preserve">
    <value>Produkt Modul-Seite</value>
  </data>
	<data name="lblSetTitle.Help" xml:space="preserve">
    <value>Ankreuzen, wenn die selektierte Artikelgruppe als Modultitel angezeigt werden soll</value>
  </data>
	<data name="lblSetTitle.Text" xml:space="preserve">
    <value>Artikelgruppe als Titel</value>
  </data>
	<data name="lblProductsPerPage.Text" xml:space="preserve">
    <value>Anzahl Artikel / Seite</value>
  </data>
	<data name="lblProductsPerPage.Help" xml:space="preserve">
    <value>Geben Sie eine kommaseparierte Liste von Anzahlen ein (zB.: 25,!50,75,100). Es muss mindestens ein Wert eingetragen werden. (! ist der voreingestellte Wert)</value>
  </data>
	<data name="lblRootLevel.Help" xml:space="preserve">
    <value>Wählen Sie optional die Basis-Artikelgruppe für dieses Modul</value>
  </data>
	<data name="lblRootLevel.Text" xml:space="preserve">
    <value>Basis-Artikelgruppe</value>
  </data>
	<data name="SelectOption.Text" xml:space="preserve">
    <value>(Optional Auswählen)</value>
  </data>
	<data name="rblSelectionDynamic.Text" xml:space="preserve">
    <value>Dynamisch</value>
  </data>
	<data name="rblSelectionStatic.Text" xml:space="preserve">
    <value>Fest</value>
  </data>
	<data name="lblSelection.Text" xml:space="preserve">
    <value>Datenselektion</value>
  </data>
	<data name="lblSelection.Help" xml:space="preserve">
    <value>Wählen Sie ob die angezeigten Daten durch verschiedene interaktiv eingegebene Filter (Produktgruppe, Suche etc.) beeinflusst werden soll oder nur eine durch den Systemadministrator vorgegebene feste Selektion anzeigen soll (Neuheiten, Angebote usw.)</value>
  </data>
	<data name="lblStaticFilter.Text" xml:space="preserve">
    <value>WHERE-Klausel</value>
  </data>
	<data name="lblStaticFilter.Help" xml:space="preserve">
    <value>Geben Sie die WHERE-Klausel der SQL-Selektion ein</value>
  </data>
	<data name="lblTopN.Text" xml:space="preserve">
    <value>Max. Anzahl Artikel</value>
  </data>
	<data name="lblTopN.Help" xml:space="preserve">
    <value>Geben Sie an, wieviele Artikel maximal selektiert werden sollen. Null bedeutet unbegrenzt</value>
  </data>
	<data name="lblShowListHead.Text" xml:space="preserve">
    <value>Sortieren anzeigen</value>
  </data>
	<data name="lblShowListHead.Help" xml:space="preserve">
    <value>Zeigt über der Liste eine Zeile mit Sortierbox und ggfs. Auswahlbox für die Seitenlänge an</value>
  </data>
	<data name="lblHeaderText.Text" xml:space="preserve">
    <value>Kopf-Text</value>
  </data>
	<data name="lblHeaderText.Help" xml:space="preserve">
    <value>Geben Sie hier einen Text ein, der über der Artikelliste angezeigt wird (HTML erlaubt)</value>
  </data>
	<data name="lblFooterText.Text" xml:space="preserve">
    <value>Fuss-Text</value>
  </data>
	<data name="lblFooterText.Help" xml:space="preserve">
    <value>Geben Sie hier einen Text ein, der unter der Artikelliste angezeigt wird (HTML erlaubt)</value>
  </data>
	<data name="lblStaticFilterSelection.Text" xml:space="preserve">
    <value>Selektion Vorlage</value>
  </data>
	<data name="lblStaticFilterSelection.Help" xml:space="preserve">
    <value>Wählen Sie eine Selektionsvorlage aus oder erzeugen Sie eine Neue</value>
  </data>
	<data name="lblStaticFilterToken.Text" xml:space="preserve">
    <value>Selektions-Name</value>
  </data>
	<data name="lblStaticFilterToken.Help" xml:space="preserve">
    <value>Geben Sie einen Namen an um die Selektion zur weiteren Verwendung zu speichern</value>
  </data>
	<data name="lblProductListModulePage.Text" xml:space="preserve">
    <value>Produktlisten Modul-Seite</value>
  </data>
	<data name="lblProductListModulePage.Help" xml:space="preserve">
    <value>Bitte wählen Sie eine Seite die ein Produktlisten Modul enthält, das auf dynamische Datenselektion eingestellt ist. Füllen Sie dieses Feld nur aus, wenn Sie die Anzeigeanzahl eingeschränkt haben (zB. "Produkte der Woche") und den Link "Alle anzeigen" einblenden. Die Auswahl des Links springt dann auf die hier eingestellte Seite</value>
  </data>
	<data name="lblShowAllLink.Text" xml:space="preserve">
    <value>"Alle Anzeigen"-Link</value>
  </data>
	<data name="lblShowAllLink.Help" xml:space="preserve">
    <value>Ankreuzen, wenn der "alle anzeigen" - Link angezeigt werden soll</value>
  </data>
	<data name="lblAllLinkCssClass.Text" xml:space="preserve">
    <value>Link CSS-Klasse</value>
  </data>
	<data name="lblAllLinkCssClass.Help" xml:space="preserve">
    <value>Geben Sie hier die CSS-Klasse an, die verwendet wird um den "alle anzeigen"-Link zu rendern</value>
  </data>
	<data name="lblShowPaging.Text" xml:space="preserve">
    <value>Paging anzeigen</value>
  </data>
	<data name="lblShowPaging.Help" xml:space="preserve">
    <value>Zeigt (wenn ausgewählt) unter der Liste eine Zeile mit Seitenzahlen zum Auswählen einer Seite an (blättern)</value>
  </data>
	<data name="lblRandomSort.Text" xml:space="preserve">
    <value>Zufällige Reihenfolge</value>
  </data>
	<data name="lblRandomSort.Help" xml:space="preserve">
    <value>Ankreuzen, wenn die Sortierung in zufälliger Reihenfolge sein soll (abwechselnde Produkte in einer statischen Liste, z.B: "Neuheiten")</value>
  </data>
	<data name="Edit.Text" xml:space="preserve">
    <value>(bearbeiten)</value>
  </data>
	<data name="AllLinkPos.Text" xml:space="preserve">
      <value>Kein,Oben Links,Oben Mitte,Oben Rechts,Unten Links,Unten Mitte,Unten Rechts</value>
  </data>
	<data name="lblTitleBreadcrumb.Text" xml:space="preserve">
		<value>Breadcrumb Titel</value>
	</data>
	<data name="lblTitleBreadcrumb.Help" xml:space="preserve">
		<value>Zeige den Titel als Breadcrumb Links (benötigt 'Artikelgruppe als Titel')</value>
	</data>
	<data name="lblEmptyList.Text" xml:space="preserve">
		<value>Leere Liste</value>
	</data>
	<data name="lblEmptyList.Help" xml:space="preserve">
		<value>Erfassen Sie hier den Text der angezeigt werden soll wenn die Produktsuche kein Ergebnis liefert</value>
	</data>
	<data name="lblLanguage.Text" xml:space="preserve">
		<value>Sprache auswählen</value>
	</data>
	<data name="hdrGlobal.Text" xml:space="preserve">
		<value>Allgemeine Einstellungen	</value>
	</data>
	<data name="hdrTemplates.Text" xml:space="preserve">
		<value>Vorlagen</value>
	</data>
	<data name="hdrLanguage.Text" xml:space="preserve">
		<value>Statische Texte</value>
	</data>
	<data name="hdrData.Text" xml:space="preserve">
		<value>Datenselektion	</value>
	</data>
	<data name="lblHideEmptyModule.Text" xml:space="preserve">
		<value>Leeres Modul verbergen</value>
	</data>
	<data name="lblHideEmptyModule.Help" xml:space="preserve">
		<value>Ankreuzen, wenn das Modul nicht angezeigt werden soll wenn keine der Selektion entsprechenden Daten vorhanden sind</value>
	</data>
</root>